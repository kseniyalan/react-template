{"version":3,"sources":["components/ui/ModalWindow/ModalWindow.js","request.js","methods.js","redux/actions/auth.js","components/layout/Sidebar/Sidebar.js","redux/actions/ui.js","components/ui/Message/Message.js","components/layout/Layout.js","components/layout/HOC/require-unauth.js","components/pages/LoginPage/LoginPage.js","components/pages/ItemsListPage/SingleItem/SingleItem.js","components/ui/InputCounter/InputCounter.js","redux/actions/itemsList.js","components/ui/ItemForm/ItemForm.js","components/ui/Spinner/Spinner.js","components/layout/HOC/require-auth.js","components/pages/ItemsListPage/ItemsListPage.js","components/pages/ItemInfo/ItemInfo.js","components/pages/PageTemplate2/PageTemplate2.js","components/pages/PageTemplate3/PageTemplate3.js","components/pages/PageNotFound/PageNotFound.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/ui.js","redux/reducers/auth.js","redux/reducers/itemsList.js","redux/reducers/itemInfo.js","index.js"],"names":["ModalWindow","_this$props","this","props","heading","confirmText","cancelText","modal","onSubmit","onCancel","react_default","a","createElement","Modal","open","isOpen","type","className","onClick","Actions","Component","defaultProps","baseURL","process","BASE_URL","ax","axios","create","signInByRT","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","refresh_token","response","wrap","_context2","prev","next","post","sent","abrupt","stop","_x3","apply","arguments","getItemsList","_ref3","_callee3","_context3","get","t0","Error","data","checkToken","token","now","Date","tokenData","jwt","decode","tokenValidUntil","valid_through","moment","isAfter","n","text_forms","n1","Math","abs","getWordEnding","sigInSuccess","accessToken","refreshToken","localStorage","setItem","setTokensInLocalStorage","payload","signOut","removeItem","checkAndRenewTokens","dispatch","tokenIsValid","tokens","resp","getItem","_x2","checkTokenError","err","errorCode","errorText","parseInt","status","error","SidebarBlock","cancelModal","openCancelModal","closeCancelModal","logOut","Sidebar","vertical","visible","width","ui_ModalWindow_ModalWindow","react_router_dom","to","isActive","match","location","pathname","connect","state","ui","Message","hideMessage","setTimeout","_this","onCloseMessage","hideErrorMessage","hideSuccessMessage","hideWarningMessage","_this2","_this$props2","text","show","msgClass","classnames","message","success","warning","CSSTransition","in","timeout","unmountOnExit","classNames","Layout","errorMsg","successMsg","warningMsg","Fragment","layout_Sidebar_Sidebar","ui_Message_Message","children","objectSpread","mapStateToProps","isAuthorized","auth","mapDispatchToProps","LoginPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","clearServerErrors","onChangeInput","field","value","setState","defineProperty","validateForm","_this$state","login","password","length","validError","onSubmitForm","_this$state2","validationError","formWasSent","clearErrors","serverError","loginError","_this$state3","loginRowClass","login-row","passwordRowClass","pass","htmlFor","id","onChange","e","target","onFocus","WrappedComponent","UnauthWrapper","_Component","inherits","createClass","key","prevUrl","react_router","RequireUnauth","SingleItem","item","onClickItem","name","color","InputCounter","label","maxLength","isTextarea","classNameText","concat","loadSuccess","items","creationSuccess","addItemData","ItemForm","setItemName","setItemColor","itemNameError","itemColorError","nameRowClass","form-row","colorRowClass","nameErrorText","colorErrorText","ui_InputCounter_InputCounter","Spinner","xmlns","viewBox","d","attributeName","from","dur","repeatCount","require_auth","AuthWrapper","ItemsListPage","renderItemsList","i","ItemsListPage_SingleItem_SingleItem","ready","loading","newItem","onCreateItem","contentClass","page-content","forms","hollow","ui_ItemForm_ItemForm","submitText","map","ui_Spinner_Spinner","itemsList","_ref","_callee","_context","_x","console","log","push","_x4","openItemPage","getState","currentState","currentItems","RequireAuth","ItemInfo","onGoBack","itemInfo","PageTemplate2","PageTemplate3","App","exact","path","component","layout_Layout","PageNotFound","withRouter","Boolean","window","hostname","history","INITIAL_STATE","undefined","action","update","$set","userLogin","$push","createHashHistory","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","es","esm","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.22ea7655.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nclass ModalWindow extends Component {\r\n  static propTypes = {\r\n    heading: PropTypes.string.isRequired,\r\n    confirmText: PropTypes.string.isRequired,\r\n    cancelText: PropTypes.string,\r\n    modal: PropTypes.object.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    heading: '',\r\n    cancelText: 'Cancel',\r\n  }\r\n\r\n  render() {\r\n    const { heading, confirmText, cancelText, modal, onSubmit, onCancel } = this.props;\r\n\r\n    return (\r\n      <Modal open={modal.isOpen}>\r\n        <button type=\"button\" className=\"btn-close modal-close\" onClick={() => onSubmit()} />\r\n        <h2>{heading}</h2>\r\n        <Modal.Actions>\r\n          <button type=\"button\" className=\"btn-cancel\" onClick={() => onCancel()}>{cancelText}</button>\r\n          <button type=\"button\" className=\"btn btn-green\" onClick={() => onSubmit()}>{confirmText}</button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalWindow;\r\n","/* EXAMPLE OF REST-API CONNECTION */\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = process.env.BASE_URL;\r\n\r\nconst ax = axios.create({baseURL});\r\n\r\n/* AUTHORIZATION */\r\n\r\n//Login and password authorization\r\nexport const signInByLP = async (login, password) => {\r\n  const response = ax.post('/authorization', {\r\n    login,\r\n    password,\r\n  });\r\n  return response;\r\n};\r\n\r\n//Refresh token authorization\r\nexport const signInByRT = async refresh_token => {\r\n  const response = await ax.post('/authorization/refresh', {\r\n    refresh_token,\r\n  });\r\n  return response;\r\n};\r\n\r\n//Example of a request to get a list of items\r\n\r\n//payload contains variables for filtering\r\n\r\nexport const getItemsList = async () => {\r\n  let response;\r\n  try {\r\n    response = await ax.get('items.json');\r\n  } catch {\r\n    throw new Error('Items loading failed');\r\n  }\r\n  return response.data;\r\n};\r\n\r\n//Server side emulation\r\nexport const createItem = async () => {\r\n  return true;\r\n};","import moment from \"moment\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\n//HERE ARE SOME USEFUL METHODS WHICH YOU CAN USE IN ANY COMPONENT\r\n\r\n\r\n//FOR AUTHORIZATION\r\nexport const getTokensFromLocalStorage = () => {\r\n  const tokens = {\r\n    accessToken: localStorage.getItem(\"accessToken\"),\r\n    refreshToken: localStorage.getItem(\"refreshToken\"),\r\n  }\r\n  return tokens;\r\n}\r\n\r\n//Saving tokens in LocalStorage\r\nexport const setTokensInLocalStorage = (accessToken, refreshToken) => {\r\n  localStorage.setItem(\"accessToken\", accessToken);\r\n  localStorage.setItem(\"refreshToken\", refreshToken);\r\n  return true;\r\n};\r\n\r\n//Checking the validity of a token\r\nexport const checkToken = (token) => {\r\n  const now = new Date();\r\n  //The lifetime of the token is stored in the token itself\r\n  const tokenData = jwt.decode(token);\r\n  const tokenValidUntil = tokenData && tokenData.valid_through;\r\n  //Checking the token lifetime\r\n  const tokenIsValid = moment(tokenValidUntil).isAfter(now);\r\n  if (tokenIsValid) return true;\r\n  return false;\r\n};\r\n\r\n//SERVICE METHODS\r\n//Setting the correct word endings when specifying the number of items\r\nexport const getWordEnding = (n, text_forms) => {\r\n  n = Math.abs(n) % 100; var n1 = n % 10;\r\n  if (n > 10 && n < 20) { return text_forms[2]; }\r\n  if (n1 > 1 && n1 < 5) { return text_forms[1]; }\r\n  if (n1 === 1) { return text_forms[0]; }\r\n  return text_forms[2];\r\n};\r\n\r\n//Example\r\ngetWordEnding(22, ['strom', 'stromy', 'stromov']);\r\n\r\n//Phone number validation\r\n//In this example phone number format is like +7 906 123-45-67\r\nexport const validatePhone = phone => {\r\n  const pattern = /^\\+?[7][-(]?\\d{3}\\)?-?\\d{3}-?\\d{2}-?\\d{2}$/;\r\n  return pattern.test(phone);\r\n};\r\n\r\n//Phone number appearance (10 digits)\r\n//Will bring the phone number string format 79061234567 to the format 7 906 123-45-67\r\nexport const formatPhone = phone => {\r\n  var tt = phone.split('');\r\n  tt.splice(1,'', ' ');\r\n  tt.splice(5,'', \" \");\r\n  tt.splice(9,'', '-');\r\n  tt.splice(12,'', '-');\r\n\r\n  //First digit\r\n  let newPhone = tt.join('');\r\n  if ((parseInt(tt[0], 10)) === 7) newPhone = `+${newPhone}`;\r\n  return newPhone;\r\n};","import { signInByLP, signInByRT } from \"../../request\";\r\n\r\nimport {\r\n    checkToken,\r\n    getTokensFromLocalStorage,\r\n    setTokensInLocalStorage,  \r\n} from \"../../methods\";\r\n\r\nimport { hideErrorMessage, closeCancelModal } from \"./ui\";\r\n\r\n//Authorization\r\nexport const SIGN_IN_START = \"Sign-in start\";\r\nexport const SIGN_IN_SUCCESS = \"Sign-in success\";\r\nexport const SIGN_IN_FAILURE = \"Sign-in failed\";\r\nexport const LOGIN_FAILURE = \"Login failure\";\r\nexport const SIGN_OUT = \"Sign-out called\";\r\nexport const CLEAR_ERROR = \"Clearing sign-in error\";\r\n\r\n//TEMPORARY EMULATION OF AUTHORIZATION FOR TEMPLATE\r\nexport const TEMP_SIGN_IN = \"Temp auth sign in\";\r\nexport const TEMP_SIGN_OUT = \"Temp auth sign out\";\r\n\r\nexport const tempSignIn = () => ({\r\n    type: TEMP_SIGN_IN\r\n});\r\n\r\n//AUTHORIZATION\r\nconst signInStart = () => ({\r\n    type: SIGN_IN_START\r\n});\r\n\r\nconst sigInSuccess = (accessToken, refreshToken) => {\r\n    setTokensInLocalStorage(accessToken, refreshToken);\r\n    return {\r\n        type: SIGN_IN_SUCCESS,\r\n        payload: {\r\n            accessToken,\r\n            refreshToken\r\n        }\r\n    };\r\n};\r\n\r\nconst sigInFailure = () => ({\r\n    type: SIGN_IN_FAILURE,\r\n});\r\n\r\nconst loginFailure = () => ({\r\n    type: LOGIN_FAILURE,\r\n});\r\n\r\nexport const clearServerErrors = () => ({ type: CLEAR_ERROR });\r\n  \r\n//Authorization with the username and password\r\nexport const signInAsync = (login, password) => {\r\n    return async dispatch => {\r\n        dispatch(signInStart());\r\n        let resp;\r\n        try {\r\n            resp = await signInByLP(login, password);\r\n        } catch (err) {\r\n            const errorCode = parseInt(err && err.response && err.response.status, 10);\r\n            //Invalid username or password or user is not found\r\n            if ((errorCode === 400) || (errorCode === 401) || (errorCode === 404)) {\r\n                return dispatch(loginFailure());\r\n            } else {\r\n                return dispatch(sigInFailure());\r\n            }\r\n        }\r\n        dispatch(hideErrorMessage());\r\n        return dispatch(sigInSuccess(resp.data.token, resp.data.refresh_token));\r\n    };\r\n};\r\n\r\n//SIGN OUT\r\nconst tempSignOut = () => ({\r\n    type: TEMP_SIGN_OUT\r\n});\r\n\r\n\r\nexport const signOut = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    localStorage.removeItem(\"prevUrl\");\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\nexport const tempSignOutAndClose = () => {\r\n    return dispatch => {\r\n        dispatch(tempSignOut());\r\n        return dispatch(closeCancelModal());\r\n    };\r\n};\r\n  \r\n//Token update, used during application initialization and in all protected methods\r\nexport const checkAndRenewTokens = () => {\r\n    return async dispatch => {\r\n        let tokenIsValid = false;\r\n        const tokens = getTokensFromLocalStorage();\r\n        if (tokens.accessToken && (tokens.accessToken !== null)) tokenIsValid = await checkToken(tokens.accessToken);\r\n        //If the accessToken is valid, we save everything and sign out.\r\n        if (tokenIsValid) return dispatch(sigInSuccess(tokens.accessToken, tokens.refreshToken));\r\n        \r\n        //Else check refreshToken\r\n        if (tokens.refreshToken && (tokens.refreshToken !== null)) tokenIsValid = await checkToken(tokens.refreshToken);\r\n        //If refreshToken is valid, autorise with it\r\n        if (tokenIsValid) {\r\n            let resp;\r\n            try {\r\n                resp = await signInByRT(tokens.refreshToken);\r\n            } catch (err) {\r\n                return dispatch(signOut());\r\n            }\r\n            return dispatch(sigInSuccess(resp.data.token, resp.data.refresh_token));\r\n        }\r\n        return dispatch(signOut());\r\n    };\r\n};\r\n\r\n//Exit on error if the token is not found in the database\r\nexport const checkTokenError = err => {\r\n    return async dispatch => {\r\n        const errorCode = parseInt(err && err.response && err.response.status, 10);\r\n        const errorText = err && err.response && err.response.data && err.response.data.error;\r\n        //Token is valid, but not found in the database\r\n        if ((errorCode === 404) && (errorText === 'Invalid token')) dispatch(signOut());\r\n    };\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Sidebar } from \"semantic-ui-react\";\r\nimport Modal from \"../../ui/ModalWindow/ModalWindow\";\r\nimport \"./Sidebar.scss\";\r\n\r\nimport { tempSignOutAndClose } from '../../../redux/actions/auth';\r\nimport { openCancelModal, closeCancelModal } from \"../../../redux/actions/ui\";\r\n\r\nconst mapStateToProps = state => ({\r\n  cancelModal: state.ui.cancelModal,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //TEMPORARY EMULATION OF AUTHORIZATION FOR TEMPLATE\r\n  logOut: () => dispatch(tempSignOutAndClose()),\r\n  //logOut: () => dispatch(signOut()),\r\n  openCancelModal: () => dispatch(openCancelModal()),\r\n  closeCancelModal: () => dispatch(closeCancelModal()),\r\n});\r\n\r\nclass SidebarBlock extends Component {\r\n  static propTypes = {\r\n    cancelModal: PropTypes.object.isRequired,\r\n    logOut: PropTypes.func.isRequired,\r\n    closeCancelModal: PropTypes.func.isRequired,\r\n    openCancelModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { cancelModal, openCancelModal, closeCancelModal, logOut } = this.props;\r\n\r\n    return (\r\n      <Sidebar className=\"aside\" vertical=\"true\" visible width=\"thin\">\r\n          <Modal\r\n            heading=\"Do you really want to sign out?\"\r\n            confirmText=\"Sign out\"\r\n            modal={cancelModal}\r\n            onSubmit={() => logOut()}\r\n            onCancel={() => closeCancelModal()}\r\n          />\r\n          {/* YOUR COMPANY LOGO */}\r\n          <div className=\"sidebar-logo-wrap\">\r\n            <div className=\"sidebar-text\">Your logo</div>\r\n            <div className=\"sidebar-wrapper\">\r\n              <div className=\"sidebar-logo\" />\r\n            </div>\r\n          </div>\r\n        <ul className=\"nav\">\r\n          <li>\r\n            <NavLink\r\n              to={'/items'}\r\n              isActive={(match, location) => {\r\n                if (location.pathname.match(/^\\/(item|edit-item|create-item)/)) return true;\r\n                return false;\r\n              }}\r\n            >\r\n              <div className=\"link-wrap\">\r\n                <div className=\"right-border\" />\r\n                <div className=\"link-text\">Items list</div>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/page2\"\r\n              isActive={(match, location) => {\r\n                if (location.pathname.match(/^\\/page2/)) return true;\r\n                return false;\r\n              }}\r\n            >\r\n              <div className=\"link-wrap\">\r\n                <div className=\"right-border\" />\r\n                <div className=\"link-text\">Page 2</div>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/page3\"\r\n              isActive={(match, location) => {\r\n                if (location.pathname.match(/^\\/(page3|edit-page3|create-page3)/)) return true;\r\n                return false;\r\n              }}\r\n            >\r\n              <div className=\"link-wrap\">\r\n                <div className=\"right-border\" />\r\n                <div className=\"link-text\">Page 3</div>\r\n              </div>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <div className=\"sidebar-logout\">\r\n          <button type=\"button\" className=\"logout-btn\" onClick={() => openCancelModal()}>Sign out</button>\r\n        </div>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarBlock);\r\n","//Error, Success, Warning Messages\r\nexport const SHOW_ERROR_MSG = \"Show error message\";\r\nexport const HIDE_ERROR_MSG = \"Hide error message\";\r\n\r\nexport const SHOW_SUCCESS_MSG = \"Show success message\";\r\nexport const HIDE_SUCCESS_MSG = \"Hide success message\";\r\n\r\nexport const HIDE_WARNING_MSG = \"Hide warning message\";\r\n\r\n//Cancel something modal window\r\nexport const OPEN_CANCEL_MODAL = \"Open cancel modal\";\r\nexport const CLOSE_CANCEL_MODAL =\"Close cancel modal\";\r\n\r\n/* ************************************* */\r\n//Error, Success, Warning Messages\r\nexport const showErrorMessage = text => ({ \r\n  type: SHOW_ERROR_MSG,\r\n  payload: {\r\n    text,\r\n  }\r\n});\r\n\r\nexport const hideErrorMessage = () => ({\r\n  type: HIDE_ERROR_MSG,\r\n});\r\n\r\nexport const showSuccessMessage = text => ({\r\n  type: SHOW_SUCCESS_MSG,\r\n  payload: {\r\n    text,\r\n  }\r\n});\r\n\r\nexport const hideSuccessMessage = () => ({\r\n  type: HIDE_SUCCESS_MSG,\r\n});\r\n\r\nexport const hideWarningMessage = () => ({\r\n  type: HIDE_WARNING_MSG,\r\n});\r\n\r\n//Cancel something modal window\r\nexport const openCancelModal = () => ({\r\n  type: OPEN_CANCEL_MODAL,\r\n});\r\n\r\nexport const closeCancelModal = () => ({\r\n  type: CLOSE_CANCEL_MODAL,\r\n});","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport \"./message.scss\";\r\n\r\nimport {\r\n  hideErrorMessage,\r\n  hideSuccessMessage,\r\n  hideWarningMessage\r\n} from '../../../redux/actions/ui';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  hideErrorMessage: () => dispatch(hideErrorMessage()),\r\n  hideSuccessMessage: () => dispatch(hideSuccessMessage()),\r\n  hideWarningMessage: () => dispatch(hideWarningMessage()),\r\n});\r\n\r\nclass Message extends Component {\r\n  static propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    show: PropTypes.bool.isRequired,\r\n    hideErrorMessage: PropTypes.func.isRequired,\r\n    hideSuccessMessage: PropTypes.func.isRequired,\r\n    hideWarningMessage: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  static defaultProps = {\r\n    type: 'error',\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { type } = this.props;\r\n    if (type === 'success') this.hideMessage();\r\n  }\r\n\r\n  hideMessage = () => {\r\n    setTimeout(() => {\r\n      this.onCloseMessage();\r\n    }, 5000);\r\n  }\r\n\r\n  onCloseMessage = () => {\r\n    const { type, hideErrorMessage, hideSuccessMessage, hideWarningMessage } = this.props;\r\n    switch (type) {\r\n      case 'error':\r\n        hideErrorMessage();\r\n        return;\r\n      case 'success':\r\n        hideSuccessMessage();\r\n        return;\r\n      case 'warning':\r\n        hideWarningMessage();\r\n        return;\r\n      default:\r\n        hideErrorMessage();\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { text, type, show } = this.props;\r\n    const msgClass = classnames({\r\n      'message': true,\r\n      'success': type === 'success',\r\n      'error': type === 'error',\r\n      'warning': type === 'warning',\r\n    });\r\n\r\n    return (\r\n      <CSSTransition in={show} timeout={500} unmountOnExit classNames=\"message\">\r\n        <div className={msgClass}>\r\n          <div className=\"msg-wrap\">\r\n            <div className=\"msg-bg\" />\r\n            <div className=\"msg-content\">\r\n              <div className=\"close-btn\" onClick={() => this.onCloseMessage()} />\r\n              <div className=\"msg-icon\" />\r\n              {text}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition> \r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Message);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SidebarBlock from \"./Sidebar/Sidebar\";\r\nimport Message from \"../ui/Message/Message\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.ui,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nclass Layout extends Component {\r\n  static propTypes = {\r\n    errorMsg: PropTypes.object.isRequired,\r\n    successMsg: PropTypes.object.isRequired,\r\n    warningMsg: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { errorMsg, successMsg, warningMsg } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <SidebarBlock />\r\n        <div className=\"main-content\">\r\n          {/*  Global error message --> */}\r\n          <Message text={errorMsg.text} show={errorMsg.show} />\r\n          \r\n          {/*  Global success message --> */}\r\n          <Message type='success' text={successMsg.text} show={successMsg.show} />\r\n\r\n          {/*  Global info message --> */}\r\n          <Message type='warning' text={warningMsg.text} show={warningMsg.show} />\r\n\r\n          {/*  Pages components --> */}\r\n          {this.props.children}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { checkAndRenewTokens } from \"../../../redux/actions/auth\";\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthorized: state.auth.isAuthorized,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  checkAndRenewTokens: () => dispatch(checkAndRenewTokens()),\r\n});\r\n\r\nexport default function (WrappedComponent) {\r\n  class UnauthWrapper extends Component {\r\n    static propTypes = {\r\n      isAuthorized: PropTypes.bool.isRequired,\r\n      checkAndRenewTokens: PropTypes.func.isRequired,\r\n    };\r\n\r\n    /*\r\n      THE BLOCK IS TEMPORARILY HIDDEN, as there is no real server authorization\r\n      When there wil be a real authorization with tokens, the method will check the tokens\r\n      and then, if they are not exist or if they are expired, it will request a token update or log out\r\n    */\r\n\r\n    /*\r\n    componentDidMount = () => {\r\n      const { checkAndRenewTokens } = this.props;\r\n      checkAndRenewTokens();\r\n    }\r\n    */\r\n    \r\n    render() {\r\n      const { isAuthorized } = this.props;\r\n      const prevUrl = localStorage.getItem(\"prevUrl\");\r\n\r\n      return !isAuthorized ? (\r\n        <WrappedComponent {...this.props} />\r\n      ) : (\r\n        <Redirect to={(prevUrl && (prevUrl.length > 1)) ? prevUrl : \"/items\"} />\r\n      );\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(UnauthWrapper);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames';\r\n\r\nimport { tempSignIn, clearServerErrors } from '../../../redux/actions/auth';\r\n\r\nimport RequireUnauth from \"../../layout/HOC/require-unauth\";\r\n\r\nimport \"./LoginPage.scss\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //TEMPORARY EMULATION OF AUTHORIZATION FOR TEMPLATE\r\n  onSubmit: (login, password) => dispatch(tempSignIn()),\r\n  //onSubmit: (login, password) => dispatch(signInAsync(login, password)),\r\n  clearServerErrors: () => dispatch(clearServerErrors()),\r\n});\r\n\r\nclass LoginPage extends Component {\r\n  static propTypes = {\r\n    serverError: PropTypes.bool.isRequired,\r\n    loginError: PropTypes.bool.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    clearServerErrors: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      login: '',\r\n      password: '',\r\n      formWasSent: false,\r\n      validError: false,\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { clearServerErrors } = this.props;\r\n    clearServerErrors();\r\n  }\r\n\r\n\tonChangeInput = (field, value) => {\r\n\t\tthis.setState({[field]: value});\r\n  }\r\n\r\n  validateForm = () => {\r\n    const { login, password } = this.state;\r\n    if ((login.length < 5) || (password.length < 5)) {\r\n      this.setState({validError: true});\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  onSubmitForm = () => {\r\n    const { onSubmit } = this.props;\r\n    const { login, password } = this.state;\r\n    const validationError = this.validateForm();\r\n    this.setState({ formWasSent: true });\r\n    if (!validationError) onSubmit(login, password);\r\n  }\r\n\r\n  clearErrors = () => {\r\n    const { clearServerErrors } = this.props;\r\n    clearServerErrors();\r\n    this.setState({ validError: false });\r\n  }\r\n\r\n  render() {\r\n    const { serverError, loginError } = this.props;\r\n    const { login, password, formWasSent, validError } = this.state;\r\n    const loginRowClass = classnames({\r\n      'login-row': true,\r\n      'error': loginError || (formWasSent && (login.length < 5)),\r\n    });\r\n\r\n    const passwordRowClass = classnames({\r\n      'login-row': true,\r\n      'pass': true,\r\n      'error': loginError || (formWasSent && (password.length < 5)),\r\n    });\r\n\r\n    let errorText = '';\r\n    switch(true) {\r\n      case loginError:\r\n        errorText = 'Incorrect username or password';\r\n        break;\r\n      case serverError:\r\n        errorText = 'Something went wrong';\r\n        break;\r\n      case validError:\r\n        switch(true){\r\n          case ((login.length === 0) && (password.length === 0)):\r\n            errorText = 'Please enter username and password';\r\n            break;\r\n          case ((login.length !== 0) && (password.length === 0)):\r\n            errorText = 'Please enter password';\r\n            break;\r\n          case ((login.length === 0) && (password.length !== 0)):\r\n            errorText = 'Please enter username';\r\n            break;\r\n          case ((login.length < 5) || (password.length < 5)):\r\n            errorText = 'Login or password are less than 5 characters';\r\n            break;\r\n          default:\r\n            errorText = 'Incorrect username or password';\r\n        }\r\n        break;\r\n      default:\r\n        errorText = 'Something went wrong';\r\n    }\r\n    \r\n    return (\r\n      <div className=\"ext-page-wrap login-wrap\">\r\n        <div className=\"login-form\">\r\n          {/* YOUR COMPANY LOGO */}\r\n          <div className=\"login-logo-wrap\">\r\n            <div className=\"logo-text\">Your logo</div>\r\n            <div className=\"logo-wrapper\">\r\n              <div className=\"login-logo\" />\r\n            </div>\r\n          </div>\r\n          { serverError || loginError || validError ? (\r\n          <div className=\"login-error\">{errorText}</div>\r\n          ) : false}\r\n          <div className={loginRowClass}>\r\n            <label htmlFor=\"\">Username</label>\r\n            <input\r\n              id=\"login\"\r\n              type=\"text\"\r\n              value={login}\r\n              onChange={(e) => this.onChangeInput('login', e.target.value)}\r\n              onFocus={this.clearErrors}\r\n            />\r\n          </div>\r\n          <div className={passwordRowClass}>\r\n            <label htmlFor=\"\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => this.onChangeInput('password', e.target.value)}\r\n              onFocus={this.clearErrors}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-green btn-login\"\r\n            onClick={() => this.onSubmitForm()}\r\n          >\r\n            Sign in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequireUnauth(LoginPage));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./SingleItem.scss\";\r\n\r\nclass SingleItem extends Component { \r\n  static propTypes = {\r\n    item: PropTypes.object.isRequired,\r\n    onClickItem: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { item, onClickItem } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\" onClick={() => onClickItem(item)}>\r\n        <div className=\"cols-wrap\">\r\n        <div className=\"col item-name\">{item.name}</div>\r\n        <div className=\"col item-color\">{item.color}</div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputCounter extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    maxLength: PropTypes.number.isRequired,\r\n    isTextarea: PropTypes.bool,\r\n    classNameText: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    isTextarea: false,\r\n    classNameText: '',\r\n  };\r\n\r\n  render() {\r\n    const { label, value, onChange, maxLength, isTextarea, classNameText } = this.props;\r\n    const length = value.length;\r\n\r\n    return (\r\n      <div className={'input-wrap' + ((isTextarea && classNameText.length > 0) ? ` ${classNameText}` : '')}>\r\n        <label htmlFor=\"address\">{label}</label>\r\n        <div className=\"input-content\">\r\n        {isTextarea ? (\r\n          <textarea\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            maxLength={maxLength}\r\n          />\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            maxLength={maxLength}\r\n          />\r\n        )}\r\n        <div className=\"counter\">{length}/{maxLength}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCounter;\r\n","import { push } from \"connected-react-router\";\r\n\r\nimport { getItemsList } from '../../request';\r\nimport { checkTokenError } from \"./auth\";\r\nimport { showErrorMessage, hideErrorMessage, showSuccessMessage } from \"./ui\";\r\n\r\n//Items list loading\r\nexport const ITEMS_LOADING_START = \"Items loading start\";\r\nexport const ITEMS_LOADING_SUCCESS = \"Items list loading success\";\r\nexport const ITEMS_LOADING_FAILED = \"Failure during items list load\";\r\n\r\n//Edit item form\r\nexport const SET_ITEM_NAME = \"Set item name\";\r\nexport const SET_ITEM_COLOR = \"Set item color\";\r\nexport const CLEAR_ITEM_FORM = \"Clear item form\"; \r\n \r\n//Create item on server side\r\nexport const ITEM_CREATION_START = \"Item creation start\";\r\nexport const ITEM_CREATED_SUCCESSFULLY = \"Item created successfully\";\r\nexport const ITEM_CREATION_FAILED = \"Failure during item creation\";\r\n\r\n//See single item\r\nexport const ADD_ITEM_DATA = \"Add item data\";\r\n\r\n//Edit form\r\nexport const setItemName = value => ({\r\n  type: SET_ITEM_NAME,\r\n  payload: { value }\r\n});\r\n\r\nexport const setItemColor = value => ({\r\n  type: SET_ITEM_COLOR,\r\n  payload: { value }\r\n});\r\n\r\n//Load items list\r\nconst startLoading = () => ({\r\n  type: ITEMS_LOADING_START\r\n});\r\n\r\nconst loadSuccess = items => ({\r\n  type: ITEMS_LOADING_SUCCESS,\r\n  payload: {\r\n    items: items || []\r\n  }\r\n});\r\n\r\nconst loadFailure = () => ({\r\n  type: ITEMS_LOADING_FAILED,\r\n});\r\n\r\n\r\n//Get items fist from server\r\nexport const getItemsListAsync = payload => {\r\n  return async (dispatch) => {\r\n    dispatch(startLoading());\r\n    dispatch(hideErrorMessage());\r\n    //await dispatch(checkAndRenewTokens()); //For real authorization\r\n    let items;\r\n    try {\r\n      items = await getItemsList();\r\n    } catch (err) {\r\n      dispatch(checkTokenError(err));\r\n      dispatch(showErrorMessage(\"Items loading failed!\"));\r\n      return dispatch(loadFailure());\r\n    }\r\n    return dispatch(loadSuccess(items));\r\n  };\r\n};\r\n\r\n//Create item on server side\r\nconst startCreation = () => ({\r\n  type: ITEM_CREATION_START\r\n});\r\n\r\nconst creationSuccess = item => ({\r\n  type: ITEM_CREATED_SUCCESSFULLY,\r\n  payload: { item }\r\n});\r\n\r\n//For real server-side\r\n/*\r\nconst creationFailure = () => ({\r\n  type: ITEM_CREATION_FAILED,\r\n});\r\n*/\r\n\r\nexport const createItemAsync = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(startCreation());\r\n    const currentState = getState();\r\n    const item = currentState.itemsList.newItem;\r\n    const currentItems = currentState.itemsList.items;\r\n    item.id = currentItems.length;\r\n    /* Server side emulation */\r\n    dispatch(showSuccessMessage('New item created!'));\r\n    return dispatch(creationSuccess(item));\r\n  };\r\n};\r\n\r\n//See single item\r\nconst addItemData = item => ({\r\n  type: ADD_ITEM_DATA,\r\n  payload: { item }\r\n});\r\n\r\nexport const openItemPage = item => {\r\n  return async (dispatch) => {\r\n    dispatch(addItemData(item));\r\n    console.log('item.id: ', item.id);\r\n    return dispatch(push(`/item/${item.id}`));\r\n  };\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames';\r\nimport InputCounter from \"../InputCounter/InputCounter\";\r\n\r\nimport {\r\n  setItemName,\r\n  setItemColor,\r\n} from '../../../redux/actions/itemsList';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setItemName: value => dispatch(setItemName(value)),\r\n  setItemColor: value => dispatch(setItemColor(value)),\r\n});\r\n\r\nclass ItemForm extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.object.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    setItemName: PropTypes.func.isRequired,\r\n    setItemColor: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formWasSent: false,\r\n      validationError: false,\r\n    }\r\n  }\r\n\r\n  onSubmitForm = () => {\r\n    const { onSubmit } = this.props;\r\n    const validationError = this.validateForm();\r\n    this.setState({ formWasSent: true });\r\n    if (!validationError) {\r\n      this.setState({ formWasSent: false });\r\n      onSubmit();\r\n    } \r\n  }\r\n\r\n  validateForm = () => {\r\n    const { item } = this.props;\r\n    if ((item.name.length === 0) || (item.name.length > 60)) return true;\r\n    if ((item.color.length === 0) || (item.color.length > 50)) return true;\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const { item, setItemName, setItemColor } = this.props;\r\n    const { formWasSent } = this.state;\r\n\r\n    const itemNameError = ((item.name.length === 0) || (item.name.length > 60)) ? true : false;\r\n    const itemColorError = ((item.color.length === 0) || (item.color.length > 50)) ? true : false;\r\n\r\n    const nameRowClass = classnames({\r\n      'form-row': true,\r\n      'error': formWasSent && itemNameError,\r\n    });\r\n\r\n    const colorRowClass = classnames({\r\n      'form-row': true,\r\n      'error': formWasSent && itemNameError,\r\n    });\r\n\r\n    let nameErrorText = '';\r\n    if (item.name.length === 0) nameErrorText = 'Item name field cannot be empty';\r\n    if (item.name.length > 60) nameErrorText = 'The maximum length of the item name has been exceeded';\r\n\r\n    let colorErrorText = '';\r\n    if (item.color.length === 0) colorErrorText = 'Item color field cannot be empty';\r\n    if (item.color.length > 50) colorErrorText = 'The maximum length of the item color has been exceeded';\r\n\r\n    return (\r\n      <div className=\"form-wrap\">\r\n        <div className={nameRowClass}>\r\n          <InputCounter\r\n            label=\"Item name\"\r\n            value={item.name}\r\n            onChange={setItemName}\r\n            maxLength={60}\r\n          />\r\n          {(formWasSent && itemNameError) ? (\r\n            <div className=\"input-text\">{nameErrorText}</div>\r\n          ) : false}\r\n        </div>\r\n\r\n        <div className={colorRowClass}>\r\n          <InputCounter\r\n            label=\"Item color\"\r\n            value={item.color}\r\n            onChange={setItemColor}\r\n            maxLength={50}\r\n          />\r\n          {(formWasSent && itemColorError) ? (\r\n            <div className=\"input-text\">{colorErrorText}</div>\r\n          ) : false}\r\n        </div>\r\n\r\n        <div className=\"form-row special\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-green\"\r\n              onClick={() => this.onSubmitForm()}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ItemForm);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Spinner.scss\";\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <svg className=\"spinner-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n          <path className=\"track\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"/>\r\n          <path className=\"moving\" d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\r\n            <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 16 16\" to=\"360 16 16\" dur=\"0.8s\" repeatCount=\"indefinite\" />\r\n          </path>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { checkAndRenewTokens } from \"../../../redux/actions/auth\";\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthorized: state.auth.isAuthorized,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  checkAndRenewTokens: () => dispatch(checkAndRenewTokens()),\r\n});\r\n\r\nexport default function (WrappedComponent) {\r\n  class AuthWrapper extends Component {\r\n    static propTypes = {\r\n      isAuthorized: PropTypes.bool.isRequired,\r\n      checkAndRenewTokens: PropTypes.func.isRequired,\r\n    };\r\n\r\n    /*\r\n      THE BLOCK IS TEMPORARILY HIDDEN, as there is no real server authorization\r\n      When there wil be a real authorization with tokens, the method will check the tokens\r\n      and then, if they are not exist or if they are expired, it will request a token update or log out\r\n    */\r\n\r\n    /*\r\n    componentDidMount = () => {\r\n      const { checkAndRenewTokens } = this.props;\r\n      checkAndRenewTokens();\r\n    }\r\n    */\r\n   \r\n\r\n    render() {\r\n      const { isAuthorized } = this.props;\r\n\r\n      const prevUrl = this.props.location.pathname;\r\n      localStorage.setItem(\"prevUrl\", prevUrl);\r\n\r\n      return isAuthorized ? (\r\n        <WrappedComponent {...this.props} />\r\n      ) : (\r\n        <Redirect to={\"/\"} />\r\n      );\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps, mapDispatchToProps)(AuthWrapper); \r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames';\r\n\r\nimport SingleItem from \"./SingleItem/SingleItem\";\r\nimport ItemForm from \"../../ui/ItemForm/ItemForm\";\r\nimport Spinner from \"../../ui/Spinner/Spinner\";\r\nimport RequireAuth from \"../../layout/HOC/require-auth\";\r\n\r\nimport \"./ItemsListPage.scss\";\r\n\r\nimport {\r\n  getItemsListAsync,\r\n  createItemAsync,\r\n  openItemPage,\r\n} from \"../../../redux/actions/itemsList\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.itemsList,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getItemsList: payload => dispatch(getItemsListAsync(payload)),\r\n  onClickItem: item => dispatch(openItemPage(item)),\r\n  onCreateItem: () => dispatch(createItemAsync()),\r\n});\r\n\r\nclass ItemsListPage extends Component { \r\n  static propTypes = {\r\n    ready: PropTypes.bool.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    items: PropTypes.array.isRequired,\r\n    newItem: PropTypes.object.isRequired,\r\n    onCreateItem: PropTypes.func.isRequired,\r\n    getItemsList: PropTypes.func.isRequired,\r\n    onClickItem: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount = () => { \r\n    const { getItemsList } = this.props;\r\n    getItemsList();\r\n  }\r\n\r\n  renderItemsList = (item, i) => {\r\n    const { onClickItem } = this.props;\r\n    return(\r\n      <SingleItem\r\n        key={`${item.id}_${i}`}\r\n        item={item}\r\n        onClickItem={(id) => onClickItem(id)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { ready, loading, items, newItem, onCreateItem } = this.props;\r\n\r\n    const contentClass = classnames({\r\n      'page-content': true,\r\n      'forms': true,\r\n      'hollow': items.length === 0,\r\n    });\r\n\r\n    return (\r\n      <div className=\"page-wrapper\">\r\n        {ready ? (\r\n          <React.Fragment>\r\n\r\n            <div className={contentClass}>\r\n              <div className=\"form-header\">Add new item</div>\r\n              <ItemForm\r\n                item={newItem}\r\n                submitText=\"Add\"\r\n                onSubmit={() => onCreateItem()}\r\n              />\r\n              {items.length !== 0 ? \r\n                items.map(this.renderItemsList)\r\n              : (\r\n                <div className=\"hollow-text\">\r\n                    No items for now. <br />\r\n                    Create your first item\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"page-footer\" />\r\n          </React.Fragment>\r\n        ) : false}\r\n        {loading ? (<Spinner />) : false}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequireAuth(ItemsListPage));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport Spinner from \"../../ui/Spinner/Spinner\";\r\nimport RequireAuth from \"../../layout/HOC/require-auth\";\r\nimport \"./ItemInfo.scss\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.itemInfo,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGoBack: () => dispatch(push('/items')),\r\n});\r\n\r\nclass ItemInfo extends Component {\r\n  static propTypes = {\r\n    ready: PropTypes.bool.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    onGoBack: PropTypes.func.isRequired,\r\n  };\r\n\r\n  //For real server-ышву\r\n  /*\r\n  componentDidMount() {\r\n    const { getItemInfo } = this.props;\r\n    const itemId= this.props.match.params.itemId;\r\n    getItemInfo(itemId);\r\n  }\r\n  */\r\n\r\n  render() {\r\n    const { ready, loading, item, onGoBack } = this.props;\r\n\r\n    return (\r\n      <div className=\"page-wrapper\">\r\n        {ready ? (\r\n          <React.Fragment>\r\n            <div className=\"page-header\">\r\n              <button type=\"button\" className=\"btn btn-back\" onClick={() => onGoBack()}>\r\n                Back\r\n              </button>\r\n            </div>\r\n          \r\n            <div className=\"page-content forms\">\r\n              <div className=\"title-wrap\">\r\n                <h1 className=\"page-title\">{item.name}</h1>\r\n              </div>\r\n              <div className=\"item-info\">Color: {item.color}</div>\r\n            </div>\r\n          </React.Fragment>\r\n        ) : false}\r\n        {loading ? (<Spinner />) : false}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequireAuth(ItemInfo));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport RequireAuth from \"../../layout/HOC/require-auth\";\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nclass PageTemplate2 extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"page-wrapper\">\r\n        Page 2\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequireAuth(PageTemplate2));","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport RequireAuth from \"../../layout/HOC/require-auth\";\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nclass PageTemplate3 extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-wrapper\">\r\n        Page 3\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequireAuth(PageTemplate3));\r\n","import React, { Component } from \"react\";\r\nimport RequireAuth from \"../../layout/HOC/require-auth\";\r\n\r\nimport \"./PageNotFound.scss\";\r\n\r\nclass PageNotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"not-found-layout\">\r\n        <div className=\"not-found-wrap\">\r\n          <div className=\"not-found-code\">404</div>\r\n          <div className=\"not-found-text\">Page is not found</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequireAuth(PageNotFound);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Layout from \"./components/layout/Layout\";\r\n\r\nimport LoginPage from \"./components/pages/LoginPage/LoginPage\";\r\n\r\nimport ItemsListPage from \"./components/pages/ItemsListPage/ItemsListPage\";\r\nimport ItemInfo from \"./components/pages/ItemInfo/ItemInfo\";\r\n\r\nimport PageTemplate2 from \"./components/pages/PageTemplate2/PageTemplate2\";\r\nimport PageTemplate3 from \"./components/pages/PageTemplate3/PageTemplate3\";\r\n\r\nimport PageNotFound from \"./components/pages/PageNotFound/PageNotFound\";\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={LoginPage} />\r\n        <Layout>\r\n          <Switch>\r\n            <Route path='/items' component={ItemsListPage} />\r\n            <Route path='/item/:itemId' component={ItemInfo} />\r\n\r\n            <Route path='/page2' component={PageTemplate2} />\r\n            <Route path='/page3' component={PageTemplate3} />\r\n            <Route path='*' component={PageNotFound} />\r\n          </Switch>\r\n        </Layout> \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport ui from \"./ui\";\r\nimport auth from \"./auth\";\r\nimport itemsList from './itemsList';\r\nimport itemInfo from './itemInfo';\r\n\r\nexport default history => combineReducers({\r\n  router: connectRouter(history),\r\n  auth,\r\n  ui,\r\n  itemsList,\r\n  itemInfo,\r\n});","import update from \"immutability-helper\";\r\nimport {\r\n  //Error, Success, Warning Messages\r\n  SHOW_ERROR_MSG,\r\n  HIDE_ERROR_MSG,\r\n  SHOW_SUCCESS_MSG,\r\n  HIDE_SUCCESS_MSG,\r\n  HIDE_WARNING_MSG,\r\n  OPEN_CANCEL_MODAL,\r\n  CLOSE_CANCEL_MODAL,\r\n} from '../actions/ui';\r\n\r\nimport { TEMP_SIGN_OUT } from '../actions/auth';\r\n\r\nconst INITIAL_STATE = {\r\n  errorMsg: {\r\n    show: false,\r\n    text: '',\r\n    timeout: 5000,\r\n  },\r\n  successMsg: {\r\n    show: false,\r\n    text: '',\r\n    timeout: 5000,\r\n  },\r\n  warningMsg: {\r\n    show: false,\r\n    text: '',\r\n    timeout: 5000,\r\n  },\r\n  cancelModal: {\r\n    isOpen: false,\r\n  },\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    //Error, Success, Warning Messages\r\n    case SHOW_ERROR_MSG:\r\n      return update(state, {\r\n        errorMsg: {\r\n          show: {$set: true},\r\n          text: {$set: action.payload.text}\r\n        }\r\n      });\r\n    case HIDE_ERROR_MSG:\r\n      return update(state, {\r\n        errorMsg: {\r\n          show: {$set: false},\r\n          text: {$set: ''}\r\n        }\r\n      });\r\n    case SHOW_SUCCESS_MSG:\r\n      return update(state, {\r\n        successMsg: {\r\n          show: {$set: true},\r\n          text: {$set: action.payload.text}\r\n        }\r\n      });\r\n    case HIDE_SUCCESS_MSG:\r\n      return update(state, {\r\n        successMsg: {\r\n          show: {$set: false},\r\n          text: {$set: ''}\r\n        }\r\n      });\r\n    case HIDE_WARNING_MSG:\r\n      return update(state, {\r\n        warningMsg: {\r\n          show: {$set: false},\r\n          text: {$set: ''}\r\n        }\r\n      });\r\n    case OPEN_CANCEL_MODAL:\r\n      return update(state, {\r\n        cancelModal: {\r\n          isOpen: {$set: true},\r\n        }\r\n      });\r\n    case CLOSE_CANCEL_MODAL:\r\n      return update(state, {\r\n        cancelModal: {\r\n          isOpen: {$set: false},\r\n        }\r\n      });\r\n    case TEMP_SIGN_OUT:\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  //Authorization\r\n  SIGN_IN_START,\r\n  SIGN_IN_SUCCESS,\r\n  SIGN_IN_FAILURE,\r\n  LOGIN_FAILURE,\r\n  SIGN_OUT,\r\n  CLEAR_ERROR,\r\n  //TEMPORARY EMULATION OF AUTHORIZATION FOR TEMPLATE\r\n  TEMP_SIGN_IN,\r\n  TEMP_SIGN_OUT,\r\n} from \"../actions/auth\";\r\n\r\nconst INITIAL_STATE = {\r\n  isAuthorized: true,\r\n  userLogin: '',\r\n  tokens: null,\r\n  loading: false,\r\n  loginError: false,\r\n  serverError: false,\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {  \r\n  switch (action.type) {\r\n    //TEMPORARY EMULATION OF AUTHORIZATION FOR TEMPLATE\r\n    case TEMP_SIGN_IN:\r\n      return {\r\n        isAuthorized: true,\r\n      };\r\n    case TEMP_SIGN_OUT:\r\n      return {\r\n        isAuthorized: false,\r\n      };\r\n    //Authorization\r\n    case SIGN_IN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        isAuthorized: false,\r\n        userLogin: '',\r\n      };\r\n    case SIGN_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tokens: action.payload,\r\n        loading: false,\r\n        isAuthorized: true\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        tokens: null,\r\n        loading: false,\r\n        isAuthorized: false,\r\n        loginError: true,\r\n      };\r\n    case SIGN_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        tokens: null,\r\n        loading: false,\r\n        isAuthorized: false,\r\n        serverError: true,\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        tokens: null,\r\n        loading: false,\r\n        isAuthorized: false,\r\n        serverError: false,\r\n        loginError: false,\r\n      };\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        loginError: false,\r\n        serverError: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import update from \"immutability-helper\";\r\nimport {\r\n  ITEMS_LOADING_START,\r\n  ITEMS_LOADING_SUCCESS,\r\n  ITEMS_LOADING_FAILED,\r\n  //Create new item\r\n  SET_ITEM_NAME,\r\n  SET_ITEM_COLOR,\r\n  ITEM_CREATED_SUCCESSFULLY,\r\n} from '../actions/itemsList';\r\n\r\nimport { TEMP_SIGN_OUT } from '../actions/auth';\r\n\r\nconst INITIAL_STATE = {\r\n  ready: false,\r\n  loading: false,\r\n  items: [],\r\n  newItem: {\r\n    name: '',\r\n    color: '',\r\n  },\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) { \r\n  switch (action.type) {\r\n    case ITEMS_LOADING_START:\r\n      return {\r\n        ...state,\r\n        ready: false,\r\n        loading: true,\r\n        items: [],\r\n      };\r\n    case ITEMS_LOADING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ready: true,\r\n        loading: false,\r\n        items: action.payload.items.items, //For real server-side\r\n      };\r\n    case ITEMS_LOADING_FAILED:\r\n      return {\r\n        ...state,\r\n        ready: false,\r\n        loading: false,\r\n      };\r\n      //Create new item\r\n      case SET_ITEM_NAME:\r\n        return update(state, {\r\n          newItem: {\r\n            name: {$set: action.payload.value},\r\n          }\r\n        });\r\n      case SET_ITEM_COLOR:\r\n        return update(state, {\r\n          newItem: {\r\n            color: {$set: action.payload.value},\r\n          }\r\n        });\r\n    /* Server side emulation */\r\n    case ITEM_CREATED_SUCCESSFULLY:\r\n      return update(state, {\r\n        items: { $push: [action.payload.item] },\r\n        newItem: {\r\n          name: { $set: '' },\r\n          color: { $set: '' },\r\n        },\r\n      });\r\n    case TEMP_SIGN_OUT:\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  ADD_ITEM_DATA\r\n} from '../actions/itemsList';\r\n\r\nimport { TEMP_SIGN_OUT } from '../actions/auth';\r\n\r\nconst INITIAL_STATE = {\r\n  ready: false,\r\n  loading: false,\r\n  item: {},\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    //Item info loading\r\n    case ADD_ITEM_DATA:\r\n      return {\r\n        ...state,\r\n        ready: true,\r\n        loading: false,\r\n        item: action.payload.item,\r\n      };\r\n    case TEMP_SIGN_OUT:\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  ConnectedRouter,\r\n  routerMiddleware,\r\n} from \"connected-react-router\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createHashHistory } from \"history\";\r\n\r\nimport reducers from './redux/reducers';\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./assets/css/common.scss\";\r\n\r\nconst history = createHashHistory();\r\n\r\nconst store = createStore(\r\n  reducers(history),\r\n  composeWithDevTools(applyMiddleware(thunk, routerMiddleware(history))),\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}